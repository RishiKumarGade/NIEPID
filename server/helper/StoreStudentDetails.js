const StudentDetailsModel = require('../model/StudentDetailsModel');

const rawClientData = {
  purposeVisit: '',
  previousConsultations: false,
  natureOfConsultations: '',
  treatmentUndergone: false,
  typeOfTreatment: '',
  therapeutic: '',
  presentCondition: [{ description: '' }],
  hasDysmorphicFeatures: '',
  smallSizedHead: '',
  ableToWalkAndRun: '',
  noAgeAppropriateComprehensionAndSpeechDevelopment: '',
  reachesGraspsAndManipulatesObjects: '',
  emotionallyAttachedToParents: '',
  hasAdequateEyeContactAndSocialSmile: '',
  eatsSelf: '',
  indicatesToiletNeeds: '',
  chromosomalAberrations: '',
  rhIncompatibility: '',
  geneticAberrations: '',
  consanguinity: '',
  threatenedAbortion: '',
  harmfulMedication: '',
  antenatalCheckUps: '',
  significantAccidents: '',
  infections: '',
  pregnancy: '',
  attemptedAbortion: '',
  nutrition: '',
  psychologicalTrauma: '',
  amnioticFluid: '',
  irradiation: '',
  nicotine: '',
  alcohol: '',
  ageAtConception: '',
  hypertension: '',
  diabetes: '',
  jaundice: '',
  fetalMovements: '',
  bleedingLatePregnancy: '',
  labourDuration: '',
  prolapsedCord: '',
  cordAroundNeck: '',
  multiplePregnancies: '',
  feedingProblems: '',
  convulsions: '',
  colorOfTheBaby: '',
  significantInjury: '',
  deliveryPlace: '',
  term: '',
  deliveryType: '',
  abnormalPresentation: '',
  respiratoryDistress: '',
  deliveryConductedBy: '',
  labourInduction: '',
  birthCry: '',
  seperationFromMother: '',
  thyroidDysfunctions: '',
  nutritionalDisorders: '',
  significantHeadInjury: '',
  typeOfFamily: '',
  mentalRetardation: '',
  genogran: '',
  consanguinity: '',
  seizuresOrConvulsions: '',
  hearingProblems: '',
  speechProblems: '',
  mentalIllness: '',
  autismOrSpectrumDisorder: '',
  visualProblems: '',
  locomotorProblem: '',
  anyFamilyHistory: '',
  learningDisabilities: '',
  familyInvolvement: '',
  positiveIssues: '',
  neighbourhoodParticipation: '',
  personalNeedsOfTheClient: '',
  visitsToTheFamilyByOthers: '',
  familyVisitOutside: '',
  playAndLeisureTimeActivities: '',
  educationalActivities: '',
  supportOfExtendedFamily: '',
  negativeIssuesWithNeighbour: '',
  discontinuedSchool: '',
  educationalHistory: '',
  teacherReport: '',
  overallPerformance: '',
  typeOfSchooling: '',
  ReasonForDiscontinuingSchooling: '',
  ageOfAdmission: '',
  involvementInPlay: '',
  observesOthersPlaying: '',
  playBehaviour: '',
  periodicity: '',
  ageofAttainmentOfMenarche: '',
  menstrualHistory: '',
  anySignificantDetails: '',
  vocationalTraining: '',
  occupationalHistory: '',
  employment: '',
  headControl: '',
  rolling: '',
  independentSitting: '',
  crawling: '',
  walking: '',
  bilateralHoldingOfToys: '',
  holdingSmallItems: '',
  scribblingWithCrayon: '',
  babbling: '',
  firstWords: '',
  twoWordsPhrases: '',
  sentences: '',
  smilesAtOthers: '',
  respondsToName: '',
  feedSelf: '',
  cognitive: '',
  motor: '',
  speechAndLanguage: '',
  social: '',
  significantMedicalIllness: '',
  negativeReactionToMedication: '',
};

function transformClientData(rawData) {
  return {
    student:rawData.student,
    purposeVisit: rawData.purposeVisit,
    previousConsultations: rawData.previousConsultations,
    natureOfConsultations: rawData.natureOfConsultations,
    treatmentUndergone: rawData.treatmentUndergone,
    typeOfTreatment: rawData.typeOfTreatment,
    therapeutic: rawData.therapeutic,
    presentCondition: rawData.presentCondition.map(condition => ({
      description: condition.description,
    })),
    hasDysmorphicFeatures: rawData.hasDysmorphicFeatures,
    smallSizedHead: rawData.smallSizedHead,
    ableToWalkAndRun: rawData.ableToWalkAndRun,
    noAgeAppropriateComprehensionAndSpeechDevelopment: rawData.noAgeAppropriateComprehensionAndSpeechDevelopment,
    reachesGraspsAndManipulatesObjects: rawData.reachesGraspsAndManipulatesObjects,
    emotionallyAttachedToParents: rawData.emotionallyAttachedToParents,
    hasAdequateEyeContactAndSocialSmile: rawData.hasAdequateEyeContactAndSocialSmile,
    eatsSelf: rawData.eatsSelf,
    indicatesToiletNeeds: rawData.indicatesToiletNeeds,
    medicalHistory: {
      chromosomalAberrations: rawData.chromosomalAberrations,
      rhIncompatibility: rawData.rhIncompatibility,
      geneticAberrations: rawData.geneticAberrations,
      consanguinity: rawData.consanguinity,
      threatenedAbortion: rawData.threatenedAbortion,
      harmfulMedication: rawData.harmfulMedication,
      antenatalCheckUps: rawData.antenatalCheckUps,
      significantAccidents: rawData.significantAccidents,
      infections: rawData.infections,
      pregnancy: rawData.pregnancy,
      attemptedAbortion: rawData.attemptedAbortion,
      nutrition: rawData.nutrition,
      psychologicalTrauma: rawData.psychologicalTrauma,
      amnioticFluid: rawData.amnioticFluid,
      irradiation: rawData.irradiation,
      nicotine: rawData.nicotine,
      alcohol: rawData.alcohol,
      ageAtConception: rawData.ageAtConception,
      hypertension: rawData.hypertension,
      diabetes: rawData.diabetes,
      jaundice: rawData.jaundice,
      fetalMovements: rawData.fetalMovements,
      bleedingLatePregnancy: rawData.bleedingLatePregnancy,
      labourDuration: rawData.labourDuration,
      prolapsedCord: rawData.prolapsedCord,
      cordAroundNeck: rawData.cordAroundNeck,
      multiplePregnancies: rawData.multiplePregnancies,
      feedingProblems: rawData.feedingProblems,
      convulsions: rawData.convulsions,
      colorOfTheBaby: rawData.colorOfTheBaby,
      significantInjury: rawData.significantInjury,
      deliveryPlace: rawData.deliveryPlace,
      term: rawData.term,
      deliveryType: rawData.deliveryType,
      abnormalPresentation: rawData.abnormalPresentation,
      respiratoryDistress: rawData.respiratoryDistress,
      deliveryConductedBy: rawData.deliveryConductedBy,
      labourInduction: rawData.labourInduction,
      birthCry: rawData.birthCry,
      seperationFromMother: rawData.seperationFromMother,
      thyroidDysfunctions: rawData.thyroidDysfunctions,
      nutritionalDisorders: rawData.nutritionalDisorders,
      significantHeadInjury: rawData.significantHeadInjury,
    },
    familyHistory: {
      typeOfFamily: rawData.typeOfFamily,
      mentalRetardation: rawData.mentalRetardation,
      genogran: rawData.genogran,
      consanguinity: rawData.consanguinity,
      seizuresOrConvulsions: rawData.seizuresOrConvulsions,
      hearingProblems: rawData.hearingProblems,
      speechProblems: rawData.speechProblems,
      mentalIllness: rawData.mentalIllness,
      autismOrSpectrumDisorder: rawData.autismOrSpectrumDisorder,
      visualProblems: rawData.visualProblems,
      locomotorProblem: rawData.locomotorProblem,
      anyFamilyHistory: rawData.anyFamilyHistory,
      learningDisabilities: rawData.learningDisabilities,
    },
    socialHistory: {
      familyInvolvement: rawData.familyInvolvement,
      positiveIssues: rawData.positiveIssues,
      neighbourhoodParticipation: rawData.neighbourhoodParticipation,
      personalNeedsOfTheClient: rawData.personalNeedsOfTheClient,
      visitsToTheFamilyByOthers: rawData.visitsToTheFamilyByOthers,
      familyVisitOutside: rawData.familyVisitOutside,
      playAndLeisureTimeActivities: rawData.playAndLeisureTimeActivities,
      educationalActivities: rawData.educationalActivities,
      supportOfExtendedFamily: rawData.supportOfExtendedFamily,
      negativeIssuesWithNeighbour: rawData.negativeIssuesWithNeighbour,
    },
    educationalHistory: {
      discontinuedSchool: rawData.discontinuedSchool,
      educationalHistory: rawData.educationalHistory,
      teacherReport: rawData.teacherReport,
      overallPerformance: rawData.overallPerformance,
      typeOfSchooling: rawData.typeOfSchooling,
      ReasonForDiscontinuingSchooling: rawData.ReasonForDiscontinuingSchooling,
      ageOfAdmission: rawData.ageOfAdmission,
    },
    playHistory: {
      involvementInPlay: rawData.involvementInPlay,
      observesOthersPlaying: rawData.observesOthersPlaying,
      playBehaviour: rawData.playBehaviour,
      periodicity: rawData.periodicity,
    },
    ageofAttainmentOfMenarche: rawData.ageofAttainmentOfMenarche,
    menstrualHistory: rawData.menstrualHistory,
    anySignificantDetails: rawData.anySignificantDetails,
    vocationalTraining: rawData.vocationalTraining,
    occupationalHistory: rawData.occupationalHistory,
    employment: rawData.employment,
    developmentalHistory: {
      headControl: rawData.headControl,
      rolling: rawData.rolling,
      independentSitting: rawData.independentSitting,
      crawling: rawData.crawling,
      walking: rawData.walking,
      bilateralHoldingOfToys: rawData.bilateralHoldingOfToys,
      holdingSmallItems: rawData.holdingSmallItems,
      scribblingWithCrayon: rawData.scribblingWithCrayon,
      babbling: rawData.babbling,
      firstWords: rawData.firstWords,
      twoWordsPhrases: rawData.twoWordsPhrases,
      sentences: rawData.sentences,
      smilesAtOthers: rawData.smilesAtOthers,
      respondsToName: rawData.respondsToName,
      feedSelf: rawData.feedSelf,
    },
    assessment: {
      cognitive: rawData.cognitive,
      motor: rawData.motor,
      speechAndLanguage: rawData.speechAndLanguage,
      social: rawData.social,
    },
    medicalIllness: {
      significantMedicalIllness: rawData.significantMedicalIllness,
      negativeReactionToMedication: rawData.negativeReactionToMedication,
    },
  };
}
module.exports.storeClientData = async(rawClientData)=> {
    const transformedData = transformClientData(rawClientData);
    await StudentDetailsModel.findOneAndUpdate(
      { student: rawClientData.student },
      transformedData,
      { upsert: true, new: true }
    );
}